buildscript {

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'http://repo1.maven.org/maven2/' }
        maven { url "https://repo.spring.io/libs-milestone" }
        mavenCentral()
        jcenter()

    }

    ext {
        springBootVersion = '1.5.3.RELEASE'
        managementPluginVersion = '0.5.6.RELEASE'
    }



    dependencies {

        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")

        classpath("io.spring.gradle:dependency-management-plugin:${managementPluginVersion}")
    }

}


allprojects {


    group 'cn.com.yxb.spring-cloud-demo'

    apply from: "${rootDir}/gradle/configurations.gradle"

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'application'
    apply plugin: 'idea'

    version '1.0-SNAPSHOT'

    sourceCompatibility = 1.8

    def cfg = ext.configs
    def libs = ext.libraries

    bootRun {
        systemProperties = System.properties
    }

    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
        maven { url 'http://repo1.maven.org/maven2/' }
        maven { url "https://repo.spring.io/libs-milestone" }

        mavenCentral()
        jcenter()

    }



    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR5"
        }
    }

    dependencies {

        // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-eureka-server
        compile("org.springframework.cloud:spring-cloud-starter-eureka-server:1.3.4.RELEASE")

        // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter
        compile("org.springframework.cloud:spring-cloud-starter:1.3.0.M1")

        compile("org.springframework.boot:spring-boot-starter-actuator:${libs.springBoot}")

        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter
        compile("org.springframework.boot:spring-boot-starter:${libs.springBoot}")

        compile("org.springframework.boot:spring-boot-starter-web:${libs.springBoot}")

        testCompile("org.springframework.boot:spring-boot-starter-test:${libs.springBoot}")
        testCompile("junit:junit:${libs.junit}")

    }

}

configure(rootProject) {
    description = 'The SpringCloud Demo Project.'

    apply plugin: 'groovy'

    def cfg = ext.configs
    def libs = ext.libraries

    task wrapper(type: Wrapper) {
        group = 'build setup'
        description = 'Generates gradlew[.bat] scripts.'

        gradleVersion = "${libs.gradle}"
        distributionUrl = "http://services.gradle.org/distributions/gradle-${libs.gradle}-all.zip"
    }

    // don't publish the default jar for the root project
    configurations.archives.artifacts.clear()
}